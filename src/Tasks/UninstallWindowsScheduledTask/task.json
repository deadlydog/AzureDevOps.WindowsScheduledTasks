{
  "id": "CDFB7F40-DBB3-128F-9A8D-1934EE9A7748",
  "name": "UninstallWindowsScheduledTask",
  "friendlyName": "Windows Scheduled Task - Uninstall ",
  "description": "Uninstalls a Windows Scheduled Task",
"helpMarkDown": "[More Information](https://github.com/deadlydog/AzureDevOps.WindowsScheduledTasks)",
  "category": "Utility",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "Daniel Schroeder",
  "version": {
    "Major": 0,
    "Minor": 0,
    "Patch": 58
  },
  "instanceNameFormat": "Uninstall Windows Scheduled Task \u0027$(ScheduledTaskFullName)\u0027",
  "groups": [
    {
      "name": "ScheduledTaskSettings",
      "displayName": "Scheduled Task Settings",
      "isExpanded": true
    },
    {
      "name": "ServerSettings",
      "displayName": "Server Settings",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "ScheduledTaskFullName",
      "type": "string",
      "label": "Scheduled Task Name",
      "required": true,
      "defaultValue": "",
      "helpMarkDown": "The full path of the Scheduled Task to uninstall from the server(s).\u003cbr /\u003eIf the Scheduled Task is installed in a directory, the directory (or directories) must also be included in the path.\u003cbr /\u003ee.g. `MyTasks\\TaskToRemove`\u003cbr /\u003e\u003cbr /\u003eWildcards are supported as well.\u003cbr /\u003eFor example, the following would all match on the `MyTasks\\TaskToRemove` task:\u003cbr /\u003e`*\\TaskToRemove`\u003cbr /\u003e`MyTasks\\TaskTo*`\u003cbr /\u003e`*\\*Remove`\u003cbr /\u003e`MyTasks\\Task*Remove`\u003cbr /\u003e\u003cbr /\u003eNOTE: Be very careful when using wildcards, since if multiple Scheduled Tasks are found to match they pattern, they will all be uninstalled.",
      "groupName": "ScheduledTaskSettings"
    },
    {
      "name": "ComputerNames",
      "type": "string",
      "label": "Computer Names",
      "required": false,
      "defaultValue": "",
      "helpMarkDown": "A comma-separated list of computers to connect to and remove the Scheduled Task from.\u003cbr /\u003e\u003cbr /\u003eLeave blank to have it run on the agent\u0027s local computer.",
      "groupName": "ServerSettings"
    },
    {
      "name": "Username",
      "type": "string",
      "label": "Username",
      "required": false,
      "defaultValue": "",
      "helpMarkDown": "The username to use when connecting to the computers and removing the Scheduled Task.\u003cbr /\u003e\u003cbr /\u003eLeave blank to use the identity that the agent is running as.",
      "groupName": "ServerSettings"
    },
    {
      "name": "Password",
      "type": "string",
      "label": "Password",
      "required": false,
      "defaultValue": "",
      "helpMarkDown": "The password to use when connecting to the computers and removing the Scheduled Task.\u003cbr /\u003e\u003cbr /\u003eAs a best practice, a secret variable should be passed in here so that other users cannot see the password in plain text.\u003cbr /\u003e\u003cbr /\u003eLeave blank to use the identity that the agent is running as.",
      "groupName": "ServerSettings"
    },
    {
      "name": "UseCredSspString",
      "type": "boolean",
      "label": "Use CredSSP",
      "required": false,
      "defaultValue": "false",
      "helpMarkDown": "Select this to use CredSSP when connecting to remote servers.\u003cbr /\u003e\u003cbr /\u003eCredSSP lets an application delegate the credentials from the client to the target server for remote authentication.\u003cbr /\u003e\u003cbr /\u003eIn order to use this setting, you may need to first run the PowerShell command \u0027Enable-WSManCredSSP -Role Server -Force\u0027 on the remote servers to enable them to accept requests that use CredSSP. If this is not enabled on the remote server the task may get \u0027Access is denied\u0027 or \u0027Authentication mechanism\u0027 errors when connecting to the remote server.",
      "groupName": "ServerSettings"
    }
  ],
  "execution": {
    "PowerShell": {
      "target": "$(currentDirectory)/Code/Uninstall-WindowsScheduledTask-TaskEntryPoint.ps1",
      "argumentFormat": "",
      "workingDirectory": "$(currentDirectory)"
    }
  }
}
